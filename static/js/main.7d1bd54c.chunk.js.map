{"version":3,"sources":["context/CountContextReducer.js","context/CountContextProvider.js","components/MarkerMine.js","components/ExtraInfo.js","components/Loader.js","components/Map.js","components/Navbar.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["CountContextReducer","state","action","type","countries","payload","filter","el","population","loading","filtered","current","isOpened","CountContext","createContext","CountContextProvider","props","useReducer","dispatch","fetchData","a","setLoading","fetch","res","json","data","console","log","message","fetchLangData","langcode","toggleMenu","Provider","value","showDetailedInfo","clearCurrent","filterByBiggest","children","MarkerMine","useContext","className","onClick","style","color","padding","ExtraInfo","x","div","initial","y","animate","transition","duration","stiffness","textAlign","width","display","margin","src","flag","alt","name","toString","replace","capital","languages","map","lang","i","length","currencies","currency","symbol","regionalBlocs","bloc","timezones","time","boxShadow","background","Loader","Map","center","zoom","useEffect","val1","lat","latlng","lng","val2","bootstrapURLKeys","key","defaultCenter","defaultZoom","defaultProps","Navbar","updatedCountries","iso","iso639_1","uniqueObjects","item","values","onChange","e","target","htmlFor","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d1bd54c.chunk.js","sourcesContent":["const CountContextReducer = (state, action) => {\r\n    switch(action.type) {\r\n\r\n        case 'GET_DATA':\r\n            return {\r\n                ...state,\r\n                countries: action.payload.filter(el => {\r\n                    return el.population !== 300\r\n                }),\r\n                loading: false\r\n            }\r\n\r\n        case 'FILTER_BY_BIGGEST':\r\n            return {\r\n                ...state,\r\n                filtered: state.countries.filter(el => {\r\n                    return el.population > action.payload\r\n                })\r\n            }\r\n\r\n\r\n        case 'FETCH_LANG_DATA':\r\n            return {\r\n                ...state,\r\n                filtered: action.payload.filter(el => {\r\n                    return el.population !== 300\r\n                }),\r\n                loading: false\r\n            }    \r\n    \r\n        case 'SET_CURRENT':\r\n            return {\r\n                ...state,\r\n                current: action.payload\r\n            } \r\n        \r\n        case 'CLEAR_CURRENT':\r\n            return {\r\n                ...state,\r\n                current: null\r\n            } \r\n\r\n        case 'SET_LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            } \r\n\r\n        case 'MENU_OPENED':\r\n            return {\r\n                ...state,\r\n                isOpened: !state.isOpened\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default CountContextReducer ","import {createContext, useReducer} from 'react';\r\nimport CountContextReducer from './CountContextReducer';\r\n\r\nexport const CountContext = createContext();\r\n\r\nconst CountContextProvider = (props) => {\r\n\r\n    const initialState = {\r\n        countries: [],\r\n        loading: false,\r\n        current: null,\r\n        filtered:null,\r\n        isOpened: false\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(CountContextReducer, initialState);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            setLoading();\r\n            const res = await fetch('https://restcountries.eu/rest/v2/all');\r\n            const data = await res.json();\r\n            dispatch({type: 'GET_DATA', payload: data})\r\n        }\r\n\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const fetchLangData = async (langcode) => {\r\n        setLoading();\r\n        const res = await fetch(`https://restcountries.eu/rest/v2/lang/${langcode}`);\r\n        const data = await res.json();\r\n        dispatch({type: 'FETCH_LANG_DATA', payload: data})\r\n        toggleMenu();\r\n   }\r\n\r\n   const filterByBiggest = (value) => {\r\n    toggleMenu();\r\n    dispatch({type: 'FILTER_BY_BIGGEST', payload: value})\r\n}\r\n\r\n    \r\n    const showDetailedInfo = (el) => {\r\n        dispatch({type: 'SET_CURRENT', payload: el})\r\n    }\r\n\r\n    const clearCurrent = () => {\r\n        dispatch({type: 'CLEAR_CURRENT'})\r\n    }\r\n\r\n    const setLoading = () => {\r\n        dispatch({type: 'SET_LOADING'})\r\n    }\r\n\r\n    const toggleMenu = () => {\r\n        dispatch({type: 'MENU_OPENED'})\r\n    }\r\n\r\n\r\n    return (\r\n        <CountContext.Provider value={{\r\n            countries: state.countries,\r\n            loading: state.loading,\r\n            current: state.current,\r\n            filtered: state.filtered,\r\n            isOpened: state.isOpened,\r\n            fetchData,\r\n            showDetailedInfo,\r\n            clearCurrent,\r\n            filterByBiggest,\r\n            fetchLangData,\r\n            toggleMenu\r\n       \r\n            }}>\r\n\r\n            {props.children}\r\n        </CountContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CountContextProvider;","import React, {useContext} from 'react'\r\nimport { CountContext } from '../context/CountContextProvider'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst MarkerMine = ({el}) => {\r\n    const {showDetailedInfo} = useContext(CountContext);\r\n    return (\r\n        <div className=\"marker\" onClick={() => showDetailedInfo(el)}>\r\n            {/* <img src={el.flag} alt=\"\"/> */}\r\n            <i className=\"fas fa-map-pin\" style={{color: 'yellow', padding: '10px'}}></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nMarkerMine.propTypes = {\r\n    el: PropTypes.object\r\n}\r\n\r\n\r\nexport default MarkerMine;\r\n","import {useContext} from 'react'\r\nimport { CountContext } from '../context/CountContextProvider'\r\nimport {motion} from 'framer-motion'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ExtraInfo = ({current}) => {\r\n    const {clearCurrent} = useContext(CountContext);\r\n    \r\n\r\n    function numberWithSpaces(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n    }\r\n\r\n    return (\r\n\r\n       <motion.div className=\"extra-info\"\r\n        initial={{y: '-50vh'}}\r\n        animate={{y: 0}}\r\n        transition={{duration: 0.5, type: 'spring', stiffness: 150}}\r\n        >\r\n            <h3 style={{textAlign: 'center'}}>Основная информация:</h3>\r\n            <img style={{width: '100px', display: 'block', margin: 'auto'}} src={current.flag} alt=\"Flag of the country\"/>\r\n            <ul>\r\n                <li><strong>Наименование страны: {current.name}</strong></li>\r\n                <li><strong>Население: {numberWithSpaces(current.population)} </strong></li>\r\n                <li><strong>Столица: {current.capital}</strong></li>\r\n                <li><strong style={{color:'yellow'}}>Официальные языки страны:</strong><br/> {current.languages.map((lang, i) => {\r\n                    return <span key={i}>{lang.name}{i === (current.languages.length - 1) ? '' : ', '}</span>\r\n                }) \r\n                }</li>\r\n                <li><strong style={{color:'yellow'}} >Валюта:</strong> {current.currencies.map((currency,i) => {\r\n                    return <div key={i}>{currency.name}{' '}{currency.symbol ? `(${currency.symbol})` : false}</div>\r\n                })}</li>\r\n                <li><strong style={{color:'yellow'}}>Входит в экономические блоки:</strong> {current.regionalBlocs.length ? current.regionalBlocs.map((bloc,i) => {\r\n                    return <span key={i}>{bloc.name}{i === (current.regionalBlocs.length - 1) ? '' : ', '}</span>\r\n                }) : '---'}\r\n                </li>\r\n                <li><strong>Местное время:</strong> {current.timezones.map((time, i) => {\r\n                    return <span key={i}>{time}{i === (current.timezones.length - 1) ? '' : ', '}</span>\r\n                })}</li>\r\n            </ul>\r\n            <button className=\"btn\" onClick={() => clearCurrent()}\r\n            style={{boxShadow: \"0px 0px 8px rgb(255,255,255)\", background: 'rgb(0,0,0)',\r\n            width: '200px'}}\r\n            >Скрыть</button>\r\n        </motion.div> \r\n    \r\n    )\r\n}\r\n\r\nExtraInfo.propTypes = {\r\n    current: PropTypes.object\r\n}\r\n\r\nexport default ExtraInfo\r\n","import React from 'react'\r\n\r\nconst Loader = () => {\r\n\r\n    // let digits = [1,2,1,2,3,4,5]\r\n    // let updatedDigits = [...new Set(digits)]\r\n    // console.log(updatedDigits)\r\n\r\n    return (\r\n        <div className=\"loader-wrapper\">\r\n            <div className=\"lds-dual-ring\"></div>\r\n            <h1>Подождите, идет загрузка...</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import {useContext, useEffect} from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { CountContext } from '../context/CountContextProvider';\r\nimport MarkerMine from './MarkerMine';\r\nimport ExtraInfo from './ExtraInfo';\r\nimport Loader from './Loader';\r\n\r\n\r\n\r\n\r\nconst Map = ({center, zoom}) => {\r\n  const {fetchData, countries, current, loading, filtered} = useContext(CountContext);\r\n  useEffect(() => {\r\n    fetchData();\r\n   // eslint-disable-next-line\r\n  }, [])\r\n\r\n\r\nlet val1 = countries && countries.map((el,i) => {\r\n    return <MarkerMine key={i} lat={el.latlng[0]} lng={el.latlng[1]} el={el}/>\r\n})\r\n\r\nlet val2 = filtered && filtered.map((el,i) => {\r\n  return <MarkerMine key={i} lat={el.latlng[0]} lng={el.latlng[1]} el={el}/>\r\n})\r\n\r\n// let val3 = chosen && chosen.map((el,i) => {\r\n//   return <MarkerMine key={i} lat={el.latlng[0]} lng={el.latlng[1]} el={el}/>\r\n// })\r\n\r\n\r\n    return (\r\n        <div className=\"map-container\">\r\n        {loading ? <Loader/> : (\r\n          <GoogleMapReact\r\n          bootstrapURLKeys={{ key: '' }}\r\n          defaultCenter={center}\r\n          defaultZoom={zoom}\r\n        >\r\n        {!filtered ? val1 : val2 }\r\n        {!current ? <ExtraInfo current={current}/> : ''}\r\n        </GoogleMapReact>\r\n        ) }\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nMap.defaultProps = {\r\n    center: {\r\n        lat: 40.95,\r\n        lng: 20.33\r\n    },\r\n    zoom: 1\r\n}\r\n\r\n\r\nexport default Map\r\n","import React, {useContext} from 'react'\r\nimport { CountContext } from '../context/CountContextProvider';\r\n\r\nconst Navbar = () => {\r\n\r\n    const {filterByBiggest, countries, fetchLangData, isOpened, toggleMenu} = useContext(CountContext);\r\n\r\n    // Шаг 1\r\n    // const ggg = langlist.map(el => {\r\n    //     return el.languages.map((item, i) => {\r\n    //         return item.iso639_1 \r\n    //         console.log(ggg)\r\n    //     })\r\n    // })\r\n\r\n    // const ggg2 = langlist.map(el => {\r\n    //     return {iso: el.languages.map(item => {\r\n    //         return item.iso639_1 \r\n    //     }), name:el.name} \r\n    // })\r\n\r\n    // console.log(ggg2)\r\n\r\n\r\n    // Шаг 2\r\n// const uniqueLanguages = ggg2.flat();\r\n// console.log(ggg2)\r\n//     console.log(uniqueLanguages)\r\n\r\n//     // Шаг 3\r\n//     var uniqueArray = [...new Set(uniqueLanguages)]\r\n//     console.log(uniqueArray)\r\n    // const arr = langlist.length && langlist.map(el => {\r\n    //     return el.languages.map(item => {\r\n    //         return item.iso639_1\r\n    //     })\r\n    // })\r\n\r\n    // const languages = countries.map(el => {\r\n    //     return {iso639_1: el.languages[0].iso639_1, name:el.languages[0].name}\r\n    // })\r\n\r\nconst updatedCountries = countries.map(el => {\r\n    return {iso: el.languages[0].iso639_1, name: el.languages[0].name}\r\n})\r\n\r\n\r\n  const uniqueObjects = [...new Map(updatedCountries.map(item => [item.iso, item])).values()]\r\n\r\n\r\n    return (\r\n        <div className=\"navbar-wrapper\">\r\n            <div style={{padding: '5px'}} className=\"sidenav-trigger-wrapper\" onClick={toggleMenu}>\r\n                <div className=\"sidenav-trigger\" >\r\n                </div> \r\n            </div>\r\n  \r\n        <ul className={`navbar ${isOpened ? 'navbar-is-opened' : ''}`}>\r\n            <li>\r\n                <label>Показать на карте страны с численностью населения:  </label>\r\n                <select onChange={e => filterByBiggest(e.target.value)} style={{padding: '5px'}}>\r\n                        <option value=\"\">Выбрать</option>\r\n                        <option value={0}>Все страны</option>\r\n                        <option value={10000000}>Более 10млн человек</option>\r\n                        <option value={30000000}>Более 30млн человек</option>\r\n                        <option value={50000000}>Более 50млн человек</option>\r\n                        <option value={100000000}>Более 100млн человек</option>\r\n                </select>\r\n            </li>\r\n            <li>\r\n                <label htmlFor=\"lang\">Показать на карте страны, в которых выбранный ниже язык, является официальным:  </label>\r\n                <select onChange={e => fetchLangData(e.target.value)} style={{padding: '5px'}} name=\"lang\">\r\n                    <option value=\"\">Выбрать</option>\r\n                    {uniqueObjects.map((el, i) => {\r\n                        return <option key={i} value={el.iso}>{el.name}</option>\r\n                    })}\r\n                </select>\r\n            </li>\r\n        </ul>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Узнай основные факты о стране (всего одним кликом!)</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport CountContextProvider from './context/CountContextProvider';\r\nimport Map from './components/Map';\r\nimport Navbar from './components/Navbar';\r\nimport Header from './components/Header';\r\n\r\n\r\nfunction App() {\r\n  // const [loading] = useContext(CountContext);\r\n \r\n\r\n\r\n  return (\r\n    <CountContextProvider>\r\n    <div>\r\n      <Header/>\r\n      <Navbar/>\r\n      <Map/>\r\n    </div>\r\n    </CountContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}