{"version":3,"sources":["context/CountContextReducer.js","context/CountContextProvider.js","components/Marker.js","components/ExtraInfo.js","components/Header.js","components/Loader.js","components/Map.js","App.js","reportWebVitals.js","index.js"],"names":["CountContextReducer","state","action","type","countries","payload","loading","current","CountContext","createContext","CountContextProvider","props","useReducer","dispatch","fetchData","a","setLoading","fetch","res","json","data","Provider","value","showDetailedInfo","el","clearCurrent","children","Marker","useContext","className","onClick","style","color","ExtraInfo","x","div","initial","y","animate","transition","duration","stiffness","textAlign","width","display","margin","src","flag","alt","name","population","toString","replace","capital","languages","currencies","boxShadow","background","Header","Loader","class","Map","center","zoom","useEffect","console","log","bootstrapURLKeys","key","defaultCenter","defaultZoom","map","i","lat","latlng","lng","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiCeA,EAjCa,SAACC,EAAOC,GAChC,OAAOA,EAAOC,MAEV,IAAK,WACD,OAAO,2BACAF,GADP,IAEIG,UAAWF,EAAOG,QAClBC,SAAS,IAEjB,IAAK,cACD,OAAO,2BACAL,GADP,IAEIM,QAASL,EAAOG,UAGxB,IAAK,gBACD,OAAO,2BACAJ,GADP,IAEIM,QAAS,OAGjB,IAAK,cACD,OAAO,2BACAN,GADP,IAEIK,SAAS,IAGjB,QACI,OAAOL,I,OCzBNO,EAAeC,0BAkDbC,EAhDc,SAACC,GAE1B,IAFoC,EAQVC,qBAAWZ,EANhB,CACjBI,UAAW,GACXE,SAAS,EACTC,QAAS,OALuB,mBAQ7BN,EAR6B,KAQtBY,EARsB,KAU9BC,EAAS,uCAAG,8BAAAC,EAAA,6DACdC,IADc,SAEIC,MAAM,wCAFV,cAERC,EAFQ,gBAGKA,EAAIC,OAHT,OAGRC,EAHQ,OAIdP,EAAS,CAACV,KAAM,WAAYE,QAASe,IAJvB,2CAAH,qDAgBTJ,EAAa,WACfH,EAAS,CAACV,KAAM,iBAKpB,OACI,cAACK,EAAaa,SAAd,CAAuBC,MAAO,CAC1BlB,UAAWH,EAAMG,UACjBE,QAASL,EAAMK,QACfC,QAASN,EAAMM,QACfO,YACAS,iBApBiB,SAACC,GACtBX,EAAS,CAACV,KAAM,cAAeE,QAASmB,KAoBpCC,aAjBa,WACjBZ,EAAS,CAACV,KAAM,oBAUhB,SAUKQ,EAAMe,Y,QCnCJC,EAVA,SAAC,GAAU,IAATH,EAAQ,EAARA,GAAQ,EACiBI,qBAAWpB,GAA1Ce,EADc,EACdA,iBADc,EACInB,UACzB,OACI,qBAAKyB,UAAU,SAASC,QAAS,kBAAMP,EAAiBC,IAAxD,SAEI,mBAAGK,UAAU,iBAAiBE,MAAO,CAACC,MAAO,e,QC6B1CC,EAjCG,SAAC,GAAe,IAIJC,EAJV3B,EAAa,EAAbA,QACTkB,EAAgBG,qBAAWpB,GAA3BiB,aAOP,OAEG,eAAC,IAAOU,IAAR,CAAYN,UAAU,aACrBO,QAAS,CAACC,EAAG,SACbC,QAAS,CAACD,EAAG,GACbE,WAAY,CAACC,SAAU,GAAKrC,KAAM,SAAUsC,UAAW,KAHxD,UAKK,oBAAIV,MAAO,CAACW,UAAW,UAAvB,8CACA,qBAAKX,MAAO,CAACY,MAAO,QAASC,QAAS,QAASC,OAAQ,QAASC,IAAKvC,EAAQwC,KAAMC,IAAI,wBACvF,+BACI,6BAAI,6HAA0BzC,EAAQ0C,UACtC,6BAAI,+FAfUf,EAe2B3B,EAAQ2C,WAdlDhB,EAAEiB,WAAWC,QAAQ,wBAAyB,MAczC,SACJ,6BAAI,kFAAkB7C,EAAQ8C,aAC9B,6BAAI,iHAAwB9C,EAAQ+C,UAAU,GAAGL,UACjD,6BAAI,4EAAiB1C,EAAQgD,WAAW,GAAGN,aAE/C,wBAAQpB,UAAU,MAAMC,QAAS,kBAAML,KACvCM,MAAO,CAACyB,UAAW,+BAAgCC,WAAY,aAC/Dd,MAAO,SAFP,sDClBGe,EARA,WACX,OACI,qBAAK7B,UAAU,SAAf,SACI,qSCMG8B,EATA,WACX,OACI,sBAAK9B,UAAU,iBAAf,UACI,qBAAK+B,MAAM,kBACX,0KCINC,EAAM,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,KAAU,EACmBnC,qBAAWpB,GAArDM,EADuB,EACvBA,UAAWV,EADY,EACZA,UAAWG,EADC,EACDA,QAASD,EADR,EACQA,QAMpC,OALF0D,qBAAU,WACRlD,IACAmD,QAAQC,IAAI9D,KACX,IAGG,qBAAKyB,UAAU,gBAAf,SACCvB,EAAU,cAAC,EAAD,IACT,eAAC,IAAD,CACA6D,iBAAkB,CAAEC,IAAK,IACzBC,cAAeP,EACfQ,YAAaP,EAHb,UAKF,cAAC,EAAD,IACC3D,GAAaA,EAAUmE,KAAI,SAAC/C,EAAGgD,GAC5B,OAAO,cAAC,EAAD,CAAgBC,IAAKjD,EAAGkD,OAAO,GAAIC,IAAKnD,EAAGkD,OAAO,GAAIlD,GAAIA,GAA7CgD,MAEZ,OAAXjE,EAAkB,cAAC,EAAD,CAAWA,QAASA,IAAa,SAQ5DsD,EAAIe,aAAe,CACfd,OAAQ,CACJW,IAAK,MACLE,IAAK,OAETZ,KAAM,GAIKF,QCzBAgB,MAdf,WAKE,OACE,cAAC,EAAD,UACA,8BACC,cAAC,EAAD,SCHUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bc6d45f5.chunk.js","sourcesContent":["const CountContextReducer = (state, action) => {\r\n    switch(action.type) {\r\n\r\n        case 'GET_DATA':\r\n            return {\r\n                ...state,\r\n                countries: action.payload,\r\n                loading: false\r\n            }\r\n        case 'SET_CURRENT':\r\n            return {\r\n                ...state,\r\n                current: action.payload\r\n            } \r\n        \r\n        case 'CLEAR_CURRENT':\r\n            return {\r\n                ...state,\r\n                current: null\r\n            } \r\n\r\n        case 'SET_LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            } \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default CountContextReducer ","import {createContext, useReducer} from 'react';\r\nimport CountContextReducer from './CountContextReducer';\r\n\r\nexport const CountContext = createContext();\r\n\r\nconst CountContextProvider = (props) => {\r\n\r\n    const initialState = {\r\n        countries: [],\r\n        loading: false,\r\n        current: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(CountContextReducer, initialState);\r\n\r\n    const fetchData = async () => {\r\n        setLoading();\r\n        const res = await fetch('https://restcountries.eu/rest/v2/all');\r\n        const data = await res.json();\r\n        dispatch({type: 'GET_DATA', payload: data})\r\n    }\r\n\r\n    \r\n    const showDetailedInfo = (el) => {\r\n        dispatch({type: 'SET_CURRENT', payload: el})\r\n    }\r\n\r\n    const clearCurrent = () => {\r\n        dispatch({type: 'CLEAR_CURRENT'})\r\n    }\r\n\r\n    const setLoading = () => {\r\n        dispatch({type: 'SET_LOADING'})\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <CountContext.Provider value={{\r\n            countries: state.countries,\r\n            loading: state.loading,\r\n            current: state.current,\r\n            fetchData,\r\n            showDetailedInfo,\r\n            clearCurrent        \r\n            \r\n            }}>\r\n\r\n            {props.children}\r\n        </CountContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CountContextProvider;","import React, {useContext} from 'react'\r\nimport { CountContext } from '../context/CountContextProvider'\r\n\r\nconst Marker = ({el}) => {\r\n    const {showDetailedInfo, countries} = useContext(CountContext);\r\n    return (\r\n        <div className=\"marker\" onClick={() => showDetailedInfo(el)}>\r\n            {/* <img src={el.flag} alt=\"\"/> */}\r\n            <i className=\"fas fa-map-pin\" style={{color: 'yellow'}}></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Marker\r\n","import {useContext, useRef, useEffect} from 'react'\r\nimport { CountContext } from '../context/CountContextProvider'\r\nimport {motion} from 'framer-motion'\r\n\r\nconst ExtraInfo = ({current}) => {\r\n    const {clearCurrent} = useContext(CountContext);\r\n    \r\n\r\n    function numberWithSpaces(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n    }\r\n\r\n    return (\r\n\r\n       <motion.div className=\"extra-info\"\r\n        initial={{y: '-50vh'}}\r\n        animate={{y: 0}}\r\n        transition={{duration: 0.5, type: 'spring', stiffness: 150}}\r\n        >\r\n            <h3 style={{textAlign: 'center'}}>Extra info about chosen country:</h3>\r\n            <img style={{width: '100px', display: 'block', margin: 'auto'}} src={current.flag} alt=\"Flag of the country\"/>\r\n            <ul>\r\n                <li><strong>Название страны: {current.name}</strong></li>\r\n                <li><strong>Население: {numberWithSpaces(current.population)} </strong></li>\r\n                <li><strong>Столица: {current.capital}</strong></li>\r\n                <li><strong>Основной язык: {current.languages[0].name}</strong></li>\r\n                <li><strong>Валюта: {current.currencies[0].name}</strong></li>\r\n            </ul>\r\n            <button className=\"btn\" onClick={() => clearCurrent()}\r\n            style={{boxShadow: \"0px 0px 8px rgb(255,255,255)\", background: 'rgb(0,0,0)',\r\n            width: '200px'}}\r\n            >Скрыть</button>\r\n        </motion.div> \r\n    \r\n    )\r\n}\r\n\r\nexport default ExtraInfo\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Узнай основные факты о стране (всего одним кликом!)</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader-wrapper\">\r\n            <div class=\"lds-dual-ring\"></div>\r\n            <h1>Подождите, идет загрузка...</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import {useContext, useState, useEffect} from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { CountContext } from '../context/CountContextProvider';\r\nimport Marker from './Marker';\r\nimport ExtraInfo from './ExtraInfo';\r\nimport Header from './Header';\r\nimport Loader from './Loader';\r\n\r\n\r\n\r\nconst Map = ({center, zoom}) => {\r\n  const {fetchData, countries, current, loading} = useContext(CountContext);\r\n  useEffect(() => {\r\n    fetchData();\r\n    console.log(countries)\r\n  }, [])\r\n\r\n    return (\r\n        <div className=\"map-container\">\r\n        {loading ? <Loader/> : (\r\n          <GoogleMapReact\r\n          bootstrapURLKeys={{ key: '' }}\r\n          defaultCenter={center}\r\n          defaultZoom={zoom}\r\n        >\r\n        <Header/>\r\n        {countries && countries.map((el,i) => {\r\n            return <Marker key={i} lat={el.latlng[0]} lng={el.latlng[1]} el={el}/>\r\n        })}\r\n        {current !==null ? <ExtraInfo current={current}/> : ''}\r\n        </GoogleMapReact>\r\n        ) }\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nMap.defaultProps = {\r\n    center: {\r\n        lat: 40.95,\r\n        lng: 20.33\r\n    },\r\n    zoom: 1\r\n}\r\n\r\n\r\nexport default Map\r\n","import React, {useContext, useEffect} from 'react'\nimport { CountContext } from './context/CountContextProvider'\nimport CountContextProvider from './context/CountContextProvider';\nimport Map from './components/Map';\nimport Loader from './components/Loader';\n\n\nfunction App() {\n  // const [loading] = useContext(CountContext);\n \n\n\n  return (\n    <CountContextProvider>\n    <div>\n     <Map/>\n    </div>\n    </CountContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}