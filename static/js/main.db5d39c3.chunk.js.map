{"version":3,"sources":["context/CountContextProvider.js","components/Marker.js","components/ExtraInfo.js","components/Header.js","components/Map.js","App.js","reportWebVitals.js","index.js"],"names":["CountContext","createContext","CountContextProvider","props","useState","countries","setCountries","loading","current","setCurrent","fetchData","a","fetch","res","json","data","Provider","value","showDetailedInfo","el","clearCurrent","children","Marker","useContext","className","onClick","style","color","ExtraInfo","x","div","initial","y","animate","transition","duration","type","stiffness","textAlign","width","display","margin","src","flag","alt","name","population","toString","replace","capital","languages","currencies","boxShadow","background","Header","Map","center","zoom","useEffect","console","log","bootstrapURLKeys","key","defaultCenter","defaultZoom","map","i","lat","latlng","lng","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db5d39c3.chunk.js","sourcesContent":["import {createContext, useState} from 'react';\r\n\r\nexport const CountContext = createContext();\r\n\r\nconst CountContextProvider = (props) => {\r\n\r\n    const [countries, setCountries] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [current, setCurrent] = useState(null);\r\n\r\n    const fetchData = async () => {\r\n        const res = await fetch('https://restcountries.eu/rest/v2/all');\r\n        const data = await res.json();\r\n        setCountries(data)\r\n    }\r\n\r\n    const showDetailedInfo = (el) => {\r\n            setCurrent(el)\r\n    }\r\n\r\n    const clearCurrent = () => {\r\n        setCurrent(null);\r\n    }\r\n\r\n    return (\r\n        <CountContext.Provider value={{\r\n            countries: countries,\r\n            loading: loading,\r\n            current,\r\n            fetchData,\r\n            showDetailedInfo,\r\n            clearCurrent        \r\n            \r\n            }}>\r\n\r\n            {props.children}\r\n        </CountContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CountContextProvider;","import React, {useContext} from 'react'\r\nimport { CountContext } from '../context/CountContextProvider'\r\n\r\nconst Marker = ({el}) => {\r\n    const {showDetailedInfo, countries} = useContext(CountContext);\r\n    return (\r\n        <div className=\"marker\" onClick={() => showDetailedInfo(el)}>\r\n            {/* <img src={el.flag} alt=\"\"/> */}\r\n            <i className=\"fas fa-map-marker\" style={{color: 'yellow'}}></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Marker\r\n","import {useContext, useRef, useEffect} from 'react'\r\nimport { CountContext } from '../context/CountContextProvider'\r\nimport {motion} from 'framer-motion'\r\n\r\nconst ExtraInfo = ({current}) => {\r\n    const {clearCurrent} = useContext(CountContext);\r\n    \r\n\r\n    function numberWithSpaces(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n    }\r\n\r\n    return (\r\n\r\n       <motion.div className=\"extra-info\"\r\n        initial={{y: '-50vh'}}\r\n        animate={{y: 0}}\r\n        transition={{duration: 0.5, type: 'spring', stiffness: 150}}\r\n        >\r\n            <h3 style={{textAlign: 'center'}}>Extra info about chosen country:</h3>\r\n            <img style={{width: '100px', display: 'block', margin: 'auto'}} src={current.flag} alt=\"Flag of the country\"/>\r\n            <ul>\r\n                <li><strong>Название страны: {current.name}</strong></li>\r\n                <li><strong>Население: {numberWithSpaces(current.population)} </strong></li>\r\n                <li><strong>Столица: {current.capital}</strong></li>\r\n                <li><strong>Основной язык: {current.languages[0].name}</strong></li>\r\n                <li><strong>Валюта: {current.currencies[0].name}</strong></li>\r\n            </ul>\r\n            <button className=\"btn\" onClick={() => clearCurrent()}\r\n            style={{boxShadow: \"0px 0px 8px rgb(255,255,255)\", background: 'rgb(0,0,0)',\r\n            width: '200px'}}\r\n            >Скрыть</button>\r\n        </motion.div> \r\n    \r\n    )\r\n}\r\n\r\nexport default ExtraInfo\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Узнай основные факты о стране (всего одним кликом!)</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import {useContext, useState, useEffect} from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { CountContext } from '../context/CountContextProvider';\r\nimport Marker from './Marker';\r\nimport ExtraInfo from './ExtraInfo';\r\nimport Header from './Header';\r\n\r\n\r\n\r\nconst Map = ({center, zoom}) => {\r\n  const {fetchData, countries, current} = useContext(CountContext);\r\n  useEffect(() => {\r\n    fetchData();\r\n    console.log(countries)\r\n  }, [])\r\n\r\n    return (\r\n        <div className=\"map-container\">\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: '' }}\r\n          defaultCenter={center}\r\n          defaultZoom={zoom}\r\n        >\r\n        <Header/>\r\n        {countries && countries.map((el,i) => {\r\n            return <Marker key={i} lat={el.latlng[0]} lng={el.latlng[1]} el={el}/>\r\n        })}\r\n        {current !==null ? <ExtraInfo current={current}/> : ''}\r\n        </GoogleMapReact>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nMap.defaultProps = {\r\n    center: {\r\n        lat: 40.95,\r\n        lng: 20.33\r\n    },\r\n    zoom: 1\r\n}\r\n\r\n\r\nexport default Map\r\n","import CountriesContextProvider from './context/CountContextProvider';\nimport Map from './components/Map';\n\n\nfunction App() {\n  return (\n    <CountriesContextProvider>\n    <div>\n      <Map/>\n    </div>\n    </CountriesContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}